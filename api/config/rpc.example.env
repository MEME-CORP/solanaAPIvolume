# Solana RPC Configuration
# Copy this file to your project root as .env and update the values

# =============================================================================
# CURRENT SETUP (Public RPC - Free Tier)
# =============================================================================
# Default public mainnet-beta RPC with strict rate limiting optimizations
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com

# Automatically applied settings for PUBLIC RPC:
# - Rate limiting: 300ms between calls (conservative for 100 req/10s limit)
# - Max concurrent requests: 3
# - Confirmation timeout: 45 seconds
# - Strategy: WebSocket-first to minimize polling requests

# =============================================================================
# PREMIUM RPC PROVIDERS (Recommended for Production)
# =============================================================================

# QuickNode (High performance, reliable)
# SOLANA_RPC_URL=https://your-endpoint.quiknode.pro/YOUR_API_KEY/

# Helius (Developer-friendly, great documentation)
# SOLANA_RPC_URL=https://rpc.helius.xyz/?api-key=YOUR_API_KEY

# Alchemy (Enterprise-grade infrastructure)
# SOLANA_RPC_URL=https://solana-mainnet.g.alchemy.com/v2/YOUR_API_KEY

# Triton (High-performance, low latency)
# SOLANA_RPC_URL=https://your-endpoint.triton.one/YOUR_API_KEY

# Automatically applied settings for PREMIUM RPC:
# - Rate limiting: 100ms between calls (higher limits supported)
# - Max concurrent requests: 10
# - Confirmation timeout: 30 seconds
# - Strategy: WebSocket-first with polling fallback

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================

# 1. NO CODE CHANGES REQUIRED
#    The system automatically detects RPC type and optimizes settings

# 2. RATE LIMITING COMPLIANCE
#    - Public RPC: Strict compliance with 100 req/10s limits
#    - Premium RPC: Optimized for higher throughput capabilities

# 3. CONFIRMATION STRATEGY
#    - All providers use WebSocket-first approach
#    - Automatic fallback to rate-limited polling if needed
#    - Smart duplicate transaction prevention

# 4. EXPECTED PERFORMANCE IMPROVEMENTS
#    Public RPC â†’ Premium RPC upgrade typically provides:
#    - 5-10x faster confirmation times
#    - Higher transaction throughput
#    - More reliable WebSocket connections
#    - Better error handling and recovery

# 5. COST CONSIDERATIONS
#    - Public RPC: Free but limited (good for development/testing)
#    - Premium RPC: ~$50-200/month (essential for production volume)

# =============================================================================
# TESTING RECOMMENDATIONS
# =============================================================================

# Start with public RPC to verify functionality, then upgrade to premium RPC
# for production deployment when transaction volume increases or reliability
# requirements are higher. 